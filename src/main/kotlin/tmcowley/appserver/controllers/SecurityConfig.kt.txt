package tmcowley.appserver.controllers

import org.springframework.context.annotation.Configuration
import org.springframework.security.config.annotation.web.builders.HttpSecurity
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter

@Configuration
@EnableWebSecurity
class SecurityConfig: WebSecurityConfigurerAdapter() {

    override fun configure(http: HttpSecurity) {
        http.authorizeRequests()
                .antMatchers("/login", "/", "/signup").permitAll() /* Don't check for security here */
                .anyRequest().authenticated(); /* anything else. secure it for us */

    }

}

// package tmcowley.appserver.controllers

// import org.springframework.cache.annotation.Cacheable
// import org.springframework.http.MediaType.*
// import org.springframework.web.bind.annotation.CrossOrigin
// import org.springframework.web.bind.annotation.GetMapping
// import org.springframework.web.bind.annotation.RequestMapping
// import org.springframework.web.bind.annotation.RequestMethod

// import org.springframework.context.annotation.Bean;
// import org.springframework.context.annotation.Configuration;
// import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
// import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;

// import org.springframework.data.redis.connection.jedis.JedisConnectionFactory

// import org.springframework.beans.factory.annotation.Autowired;

// import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
// import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter
// import org.springframework.security.config.annotation.web.builders.HttpSecurity
// import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder

// import org.springframework.security.crypto.password.PasswordEncoder
// import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder


// import org.springframework.session.*


// @Configuration
// @EnableWebSecurity
// public class SecurityConfig : WebSecurityConfigurerAdapter() {

//     @Autowired
//     @Throws(Exception::class)
//     public fun configureGlobal(auth: AuthenticationManagerBuilder){
//         auth
//           .inMemoryAuthentication()
//           .withUser("admin")
//           .password(passwordEncoder().encode("password"))
//           .roles("ADMIN");
//     }

//     @Throws(Exception::class)
//     protected override fun configure(http: HttpSecurity) {
//         http
//           .httpBasic().and()
//           .authorizeRequests()
//           .antMatchers("/").hasRole("ADMIN")
//           .anyRequest().authenticated();
//     }

//     @Bean
//     fun passwordEncoder(): PasswordEncoder {
//         return BCryptPasswordEncoder();
//     }

// }